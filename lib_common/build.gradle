apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        multiDexEnabled true

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        //ARouter
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }

    lintOptions {
        abortOnError false
    }

    dataBinding {
        enabled = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])

    //test
    testApi rootProject.ext.dependencies.junit
    androidTestApi rootProject.ext.dependencies.runner
    androidTestApi rootProject.ext.dependencies.espresso
    //google
    api rootProject.ext.dependencies.constraint
    api "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    api "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    api "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    api "com.android.support:design:$rootProject.supportLibraryVersion"
    // Architecture components
    //// room
    api "android.arch.persistence.room:runtime:$rootProject.archRoomVersion"
    api "android.arch.persistence.room:rxjava2:$rootProject.archRoomVersion"
    testApi "android.arch.persistence.room:testing:$rootProject.archRoomVersion"
    annotationProcessor "android.arch.persistence.room:compiler:$rootProject.archRoomVersion"
    ////lifecycles
    api "android.arch.lifecycle:common-java8:$rootProject.archVersion"
    api "android.arch.lifecycle:runtime:$rootProject.archVersion"
    annotationProcessor "android.arch.lifecycle:compiler:$rootProject.archVersion"
    ////ViewModel and LiveData
    api "android.arch.lifecycle:extensions:$rootProject.archVersion"
    api "android.arch.lifecycle:viewmodel:$rootProject.archVersion"
    api "android.arch.lifecycle:livedata:$rootProject.archVersion"
    api "android.arch.lifecycle:reactivestreams:$rootProject.archVersion"
    testApi "android.arch.core:core-testing:$rootProject.archVersion"
    annotationProcessor "android.arch.lifecycle:compiler:$rootProject.archVersion"
    //// Paging
    api "android.arch.paging:runtime:$rootProject.archPagingVersion"
    //logger
    api "com.orhanobut:logger:$rootProject.loggerVersion"
    //router
    api "com.alibaba:arouter-api:$rootProject.arouterVersion"
    annotationProcessor "com.alibaba:arouter-compiler:$rootProject.arouterCompilerVersion"
    //LeakCanary
    debugApi "com.squareup.leakcanary:leakcanary-android:$rootProject.leakcanaryVersion"
    releaseApi "com.squareup.leakcanary:leakcanary-android-no-op:$rootProject.leakcanaryVersion"
    //fresco
    api "com.facebook.fresco:fresco:$rootProject.frescoVersion"
    api "com.facebook.fresco:imagepipeline-okhttp3:$rootProject.frescoVersion"
    api "com.facebook.fresco:animated-gif:$rootProject.frescoVersion"
    //retrofit
    api "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    api "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"
    api "com.squareup.retrofit2:adapter-rxjava2:$rootProject.retrofitVersion"
    //okhttp3
    api "com.squareup.okhttp3:okhttp:$rootProject.okhttpVersion"
    api "com.squareup.okhttp3:logging-interceptor:$rootProject.okhttpVersion"
    //rxjava
    api "io.reactivex.rxjava2:rxjava:$rootProject.rxjavaVersion"
    api "io.reactivex.rxjava2:rxandroid:$rootProject.rxandroidVersion"
    //dagger
    api "com.google.dagger:dagger:$rootProject.daggerVersion"
    api "com.google.dagger:dagger-android:$rootProject.daggerVersion"
    api "com.google.dagger:dagger-android-support:$rootProject.daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    annotationProcessor "com.google.dagger:dagger-android-processor:$rootProject.daggerVersion"
}
